<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.CostTargetMapper">
  <resultMap id="BaseResultMap" type="com.example.model.CostTargetInfo">
    <id column="cost_target_id" jdbcType="BIGINT" property="costTargetId" />
    <result column="cost_account_number" jdbcType="VARCHAR" property="costAccountNumber" />
    <result column="work_amount" jdbcType="INTEGER" property="workAmount" />
    <result column="measurement_unit" jdbcType="VARCHAR" property="measurementUnit" />
    <result column="unit_price" jdbcType="INTEGER" property="unitPrice" />
    <result column="total_price" jdbcType="INTEGER" property="totalPrice" />
  </resultMap>
  <sql id="Base_Column_List">
    cost_target_id, cost_account_number, work_amount, measurement_unit, unit_price, total_price
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from cost_target_info
    where cost_target_id = #{costTargetId,jdbcType=BIGINT}
  </select>

  <resultMap id="costTargetMerge" type="com.example.model.CostTargetMerge">
    <id column="cost_account_id" jdbcType="BIGINT" property="costAccountId" />
    <result column="cost_target_id" jdbcType="VARCHAR" property="costTargetId" />
    <result column="cost_account_number" jdbcType="VARCHAR" property="costAccountNumber" />
    <result column="work_amount" jdbcType="INTEGER" property="workAmount" />
    <result column="measurement_unit" jdbcType="VARCHAR" property="measurementUnit" />
    <result column="unit_price" jdbcType="INTEGER" property="unitPrice" />
    <result column="total_price" jdbcType="INTEGER" property="totalPrice" />
    <result column="cost_account_name" jdbcType="VARCHAR" property="costAccountName" />
    <result column="item_number" jdbcType="VARCHAR" property="itemNumber" />
    <result column="item_name" jdbcType="VARCHAR" property="itemName" />
    <result column="has_children" jdbcType="TINYINT" property="hasChildren" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="parent_number" jdbcType="VARCHAR" property="parentNumber" />
    <result column="level" jdbcType="INTEGER" property="level" />
  </resultMap>
  <select id="selectByItemNumber" resultMap="costTargetMerge">
    select
    a.cost_account_id, a.cost_account_name,item_number,item_name,has_children,status,parent_number, level, b.cost_target_id, a.cost_account_number, work_amount, measurement_unit, unit_price, total_price
    from (cost_account_info AS a LEFT JOIN cost_target_info AS b on a.cost_account_number = b.cost_account_number)
    where a.item_number = #{itemNumber,jdbcType=VARCHAR} and parent_number is null and status = #{status,jdbcType=TINYINT}
  </select>
  <select id="selectChildren" resultMap="costTargetMerge">
    select
    a.cost_account_id, a.cost_account_name,item_number,item_name,has_children,status,parent_number, level, cost_target_id, a.cost_account_number, work_amount, measurement_unit, unit_price, total_price
    from (cost_account_info AS a LEFT JOIN cost_target_info AS b on a.cost_account_number = b.cost_account_number)
    where parent_number = #{costAccountNumber,jdbcType=VARCHAR} and status = #{status,jdbcType=TINYINT}
  </select>
  <select id="selectByCostAccountNumber" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from cost_target_info
    where cost_account_number = #{costAccountNumber,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from cost_target_info
    where cost_target_id = #{costTargetId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.model.CostTargetInfo">
    <selectKey keyProperty="costTargetId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into cost_target_info (cost_account_number, work_amount, measurement_unit,
      unit_price, total_price)
    values (#{costAccountNumber,jdbcType=VARCHAR}, #{workAmount,jdbcType=INTEGER}, #{measurementUnit,jdbcType=VARCHAR},
      #{unitPrice,jdbcType=INTEGER}, #{totalPrice,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.model.CostTargetInfo">
    <selectKey keyProperty="costTargetId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into cost_target_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="costAccountNumber != null">
        cost_account_number,
      </if>
      <if test="workAmount != null">
        work_amount,
      </if>
      <if test="measurementUnit != null">
        measurement_unit,
      </if>
      <if test="unitPrice != null">
        unit_price,
      </if>
      <if test="totalPrice != null">
        total_price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="costAccountNumber != null">
        #{costAccountNumber,jdbcType=VARCHAR},
      </if>
      <if test="workAmount != null">
        #{workAmount,jdbcType=INTEGER},
      </if>
      <if test="measurementUnit != null">
        #{measurementUnit,jdbcType=VARCHAR},
      </if>
      <if test="unitPrice != null">
        #{unitPrice,jdbcType=INTEGER},
      </if>
      <if test="totalPrice != null">
        #{totalPrice,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.model.CostTargetInfo">
    update cost_target_info
    <set>
      <if test="costAccountNumber != null">
        cost_account_number = #{costAccountNumber,jdbcType=VARCHAR},
      </if>
      <if test="workAmount != null">
        work_amount = #{workAmount,jdbcType=INTEGER},
      </if>
      <if test="measurementUnit != null">
        measurement_unit = #{measurementUnit,jdbcType=VARCHAR},
      </if>
      <if test="unitPrice != null">
        unit_price = #{unitPrice,jdbcType=INTEGER},
      </if>
      <if test="totalPrice != null">
        total_price = #{totalPrice,jdbcType=INTEGER},
      </if>
    </set>
    where cost_target_id = #{costTargetId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.model.CostTargetInfo">
    update cost_target_info
    set cost_account_number = #{costAccountNumber,jdbcType=VARCHAR},
      work_amount = #{workAmount,jdbcType=INTEGER},
      measurement_unit = #{measurementUnit,jdbcType=VARCHAR},
      unit_price = #{unitPrice,jdbcType=INTEGER},
      total_price = #{totalPrice,jdbcType=INTEGER}
    where cost_target_id = #{costTargetId,jdbcType=BIGINT}
  </update>
</mapper>
